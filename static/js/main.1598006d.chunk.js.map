{"version":3,"sources":["components/Profile/Profile.styled.jsx","components/Profile/Profile.jsx","helpers/makeRandomBackgroundColor.js","components/Statistics/StatItem/StatItem.styled.jsx","components/Statistics/StatItem/StatItem.jsx","components/Statistics/Statistics.styled.jsx","components/Statistics/Statistics.jsx","components/FriendList/FriendListItem/FriendListItem.styled.jsx","components/FriendList/FriendListItem/FriendListItem.jsx","components/FriendList/FriendList.styled.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionRow/TransactionRow.styled.jsx","components/TransactionHistory/TransactionRow/TransactionRow.jsx","components/TransactionHistory/TransactionHistory.styled.jsx","components/TransactionHistory/TransactionHistory.jsx","components/App/App.styled.jsx","components/App/App.js","index.js"],"names":["Card","styled","div","Description","Avatar","img","UserName","p","UserTag","UserLocation","StatsList","ul","StatsItemName","span","StatsItemQuantity","Profile","username","tag","location","avatar","stats","src","alt","followers","views","likes","getRandomBackgroundColor","min","max","makeRandom","Math","floor","random","backgroundColor","StatListItem","li","Label","Percentage","StatItem","label","percentage","style","Section","section","Title","h2","StatList","Statistics","title","data","map","id","ListItem","StatusMarker","props","status","UserAvatar","FriendListItem","name","isOnline","width","FriendsList","FriendList","friends","item","TableRow","tr","TransactionRow","type","amount","currency","TransactionHistoryTable","table","TransactionHistory","items","Container","App","user","friendsArr","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1598006d.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const Card = styled.div`\r\n  width: 200px;\r\n  background-color: #fff;\r\n  font-size: 14px;\r\n  margin: 50px auto;\r\n`;\r\n\r\nexport const Description = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 30px;\r\n\r\n  & > p {\r\n    margin-top: 0;\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\n\r\nexport const Avatar = styled.img`\r\n  width: 100px;\r\n  height: auto;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const UserName = styled.p`\r\n  font-size: 16px;\r\n  font-weight: 700;\r\n  color: #000;\r\n`;\r\n\r\nexport const UserTag = styled.p`\r\n  color: #88f;\r\n`;\r\nexport const UserLocation = UserTag;\r\n\r\nexport const StatsList = styled.ul`\r\n  list-style: none;\r\n  display: flex;\r\n  margin: 0;\r\n  padding: 0;\r\n  justify-content: space-between;\r\n\r\n  & > li {\r\n    flex-basis: 33%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    background-color: rgb(190, 208, 247);\r\n    padding: 10px;\r\n    border: 1px solid #aaa;\r\n  }\r\n`;\r\n\r\nexport const StatsItemName = styled.span`\r\n  font-size: 12px;\r\n`;\r\nexport const StatsItemQuantity = styled.span`\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n`;\r\n","import PropTypes from 'prop-types';\nimport {\n  Card,\n  Description,\n  Avatar,\n  UserName,\n  UserTag,\n  UserLocation,\n  StatsList,\n  StatsItemName,\n  StatsItemQuantity,\n} from './Profile.styled';\n\nexport default function Profile({ username, tag, location, avatar, stats }) {\n  return (\n    <Card>\n      <Description>\n        <Avatar src={avatar} alt=\"User avatar\" />\n        <UserName>{username}</UserName>\n        <UserTag>@{tag}</UserTag>\n        <UserLocation>{location}</UserLocation>\n      </Description>\n\n      <StatsList>\n        <li>\n          <StatsItemName>Followers</StatsItemName>\n          <StatsItemQuantity>{stats.followers}</StatsItemQuantity>\n        </li>\n        <li>\n          <StatsItemName>Views</StatsItemName>\n          <StatsItemQuantity>{stats.views}</StatsItemQuantity>\n        </li>\n        <li>\n          <StatsItemName>Likes</StatsItemName>\n          <StatsItemQuantity>{stats.likes}</StatsItemQuantity>\n        </li>\n      </StatsList>\n    </Card>\n  );\n}\n\nProfile.propTypes = {\n  username: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.object.isRequired,\n};\n","export function getRandomBackgroundColor(min, max) {\r\n  const makeRandom = () => Math.floor(Math.random() * (max - min)) + min;\r\n\r\n  return {\r\n    backgroundColor:\r\n      'rgb(' +\r\n      makeRandom(0, 200) +\r\n      ', ' +\r\n      makeRandom(0, 200) +\r\n      ', ' +\r\n      makeRandom(0, 200) +\r\n      ')',\r\n  };\r\n}\r\n","import styled from '@emotion/styled';\r\n\r\nexport const StatListItem = styled.li`\r\n  flex-basis: 33%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 10px 20px;\r\n  border: 1px solid #aaa;\r\n  color: #fff;\r\n`;\r\n\r\nexport const Label = styled.span`\r\n  font-size: 12px;\r\n`;\r\n\r\nexport const Percentage = styled.span`\r\n  font-size: 16px;\r\n`;\r\n","import PropTypes from 'prop-types';\nimport { getRandomBackgroundColor } from '../../../helpers/makeRandomBackgroundColor';\nimport { StatListItem, Label, Percentage } from './StatItem.styled';\n\nexport default function StatItem({ label, percentage }) {\n  return (\n    <StatListItem style={getRandomBackgroundColor(50, 128)}>\n      <Label>{label}</Label>\n      <Percentage>{percentage}%</Percentage>\n    </StatListItem>\n  );\n}\n\nStatItem.propTypes = {\n  label: PropTypes.string.isRequired,\n  percentage: PropTypes.number.isRequired,\n};\n","import styled from '@emotion/styled';\r\n\r\nexport const Section = styled.section`\r\n  background-color: #fff;\r\n  min-width: 200px;\r\n  display: inline-block;\r\n  margin: 50px auto;\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  margin: 20px auto;\r\n  font-size: 20px;\r\n  text-transform: uppercase;\r\n`;\r\n\r\nexport const StatList = styled.ul`\r\n  list-style: none;\r\n  display: flex;\r\n  margin: 0;\r\n  padding: 0;\r\n  justify-content: space-between;\r\n`;\r\n","import PropTypes from 'prop-types';\nimport StatItem from './StatItem/StatItem';\nimport { Section, Title, StatList } from './Statistics.styled';\n\nexport default function Statistics({ title, data }) {\n  return (\n    <Section>\n      {title && <Title>{title}</Title>}\n\n      <StatList>\n        {data.map(({ label, percentage, id }) => (\n          <StatItem label={label} percentage={percentage} key={id} />\n        ))}\n      </StatList>\n    </Section>\n  );\n}\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  data: PropTypes.array.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const ListItem = styled.li`\n  width: 300px;\n  background-color: #fff;\n  border-radius: 5px;\n  box-shadow: 0 5px 5px #333;\n  margin-bottom: 20px;\n  display: flex;\n  align-items: center;\n  padding: 15px 25px;\n`;\n\nexport const StatusMarker = styled.span`\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  margin-right: 15px;\n  background-color: ${props => {\n    return props.status ? 'green' : 'red';\n  }};\n`;\n\nexport const UserAvatar = styled.img`\n  margin-right: 15px;\n`;\n\nexport const UserName = styled.p`\n  font-size: 26px;\n  margin: 0;\n`;\n","import PropTypes from 'prop-types';\nimport {\n  ListItem,\n  StatusMarker,\n  UserAvatar,\n  UserName,\n} from './FriendListItem.styled';\n\nexport default function FriendListItem({ avatar, name, isOnline }) {\n  return (\n    <ListItem>\n      <StatusMarker status={isOnline} />\n      <UserAvatar src={avatar} alt=\"User avatar\" width=\"48\" />\n      <UserName>{name}</UserName>\n    </ListItem>\n  );\n}\n\nFriendListItem.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const FriendsList = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n`;\n","import PropTypes from 'prop-types';\nimport FriendListItem from './FriendListItem/FriendListItem';\nimport { FriendsList } from './FriendList.styled';\n\nexport default function FriendList({ friends }) {\n  return (\n    <FriendsList>\n      {friends.map(item => (\n        <FriendListItem\n          key={item.id}\n          avatar={item.avatar}\n          name={item.name}\n          isOnline={item.isOnline}\n        />\n      ))}\n    </FriendsList>\n  );\n}\n\nFriendList.propTypes = {\n  friends: PropTypes.array.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const TableRow = styled.tr`\n  &:nth-of-type(odd) {\n    background-color: #e5e9ff;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { TableRow } from './TransactionRow.styled';\n\nexport default function TransactionRow({ type, amount, currency }) {\n  return (\n    <TableRow>\n      <td>{type}</td>\n      <td>{amount}</td>\n      <td>{currency}</td>\n    </TableRow>\n  );\n}\n\nTransactionRow.propTypes = {\n  type: PropTypes.string.isRequired,\n  amount: PropTypes.string.isRequired,\n  currency: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const TransactionHistoryTable = styled.table`\n  width: 600px;\n  background-color: #fff;\n  border-color: red;\n\n  & tr {\n    height: 50px;\n  }\n\n  & th {\n    background-color: #2fd2e7;\n    color: white;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport TransactionRow from './TransactionRow/TransactionRow';\nimport { TransactionHistoryTable } from './TransactionHistory.styled';\n\nexport default function TransactionHistory({ items }) {\n  return (\n    <TransactionHistoryTable>\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {items.map(item => (\n          <TransactionRow\n            key={item.id}\n            type={item.type}\n            amount={item.amount}\n            currency={item.currency}\n          />\n        ))}\n      </tbody>\n    </TransactionHistoryTable>\n  );\n}\n\nTransactionHistory.propTypes = {\n  items: PropTypes.array.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  text-align: center;\n  background-color: #949696;\n  padding: 50px;\n`;\n","import user from '../../db/user.json';\nimport data from '../../db/data.json';\nimport friendsArr from '../../db/friends.json';\nimport transactions from '../../db/transactions.json';\n\nimport Profile from '../Profile/Profile';\nimport Statistics from '../Statistics/Statistics';\nimport FriendList from '../FriendList/FriendList';\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\n\nimport { Container } from './App.styled';\n\nfunction App() {\n  return (\n    <Container>\n      <Profile\n        username={user.username}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n\n      <Statistics title=\"upload stats\" data={data} />\n\n      <FriendList friends={friendsArr} />\n\n      <TransactionHistory items={transactions} />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/App';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}