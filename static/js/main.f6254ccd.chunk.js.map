{"version":3,"sources":["components/Profile/Profile.js","components/Statistics/StatItem.js","components/Statistics/Statistics.js","components/FriendList/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionRow.js","components/TransactionHistory/TransactionHistory.js","App.js","reportWebVitals.js","index.js"],"names":["Profile","username","tag","location","avatar","stats","className","src","alt","followers","views","likes","StatItem","label","percentage","Statistics","title","data","map","item","id","FriendListItem","name","isOnline","width","FriendList","friends","TransactionRow","type","amount","currency","TransactionHistory","items","App","user","friendsArr","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6254ccd.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nexport default function Profile({ username, tag, location, avatar, stats }) {\r\n  return (\r\n    <div className=\"profile\">\r\n      <div className=\"description\">\r\n        <img src={avatar} alt=\"User avatar\" className=\"avatar\" />\r\n        <p className=\"name\">{username}</p>\r\n        <p className=\"tag\">@{tag}</p>\r\n        <p className=\"location\">{location}</p>\r\n      </div>\r\n\r\n      <ul className=\"stats\">\r\n        <li>\r\n          <span className=\"label\">Followers</span>\r\n          <span className=\"quantity\">{stats.followers}</span>\r\n        </li>\r\n        <li>\r\n          <span className=\"label\">Views</span>\r\n          <span className=\"quantity\">{stats.views}</span>\r\n        </li>\r\n        <li>\r\n          <span className=\"label\">Likes</span>\r\n          <span className=\"quantity\">{stats.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nProfile.propTypes = {\r\n  username: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n  stats: PropTypes.object.isRequired,\r\n}\r\n","import PropTypes from 'prop-types'\r\n\r\nexport default function StatItem({ label, percentage }) {\r\n  return (\r\n    <>\r\n      <span className=\"label\">{label}</span>\r\n      <span className=\"percentage\">{percentage}</span>\r\n    </>\r\n  )\r\n}\r\n\r\nStatItem.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  percentage: PropTypes.number.isRequired,\r\n}\r\n","import PropTypes from 'prop-types'\r\nimport StatItem from './StatItem'\r\n// import data from '../../db/data.json'\r\n\r\nexport default function Statistics({ title, data }) {\r\n  return (\r\n    <section className=\"statistics\">\r\n      {title && <h2 className=\"title\">{title}</h2>}\r\n\r\n      <ul className=\"stat-list\">\r\n        {data.map((item) => (\r\n          <li className=\"item\" key={item.id}>\r\n            <StatItem label={item.label} percentage={item.percentage} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  )\r\n}\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  data: PropTypes.array.isRequired,\r\n}\r\n","import PropTypes from 'prop-types'\r\n\r\nexport default function FriendListItem({ avatar, name, isOnline }) {\r\n  return (\r\n    <li className=\"item\">\r\n      <span className=\"status\">{isOnline ? 'On' : 'Off'}</span>\r\n      <img className=\"avatar\" src={avatar} alt=\"User avatar\" width=\"48\" />\r\n      <p className=\"name\">{name}</p>\r\n    </li>\r\n  )\r\n}\r\n\r\nFriendListItem.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  isOnline: PropTypes.bool.isRequired,\r\n}\r\n","import PropTypes from 'prop-types'\r\nimport FriendListItem from './FriendListItem'\r\n\r\nexport default function FriendList({ friends }) {\r\n  return (\r\n    <ul className=\"friend-list\">\r\n      {friends.map((item) => (\r\n        <FriendListItem\r\n          key={item.id}\r\n          avatar={item.avatar}\r\n          name={item.name}\r\n          isOnline={item.isOnline}\r\n        />\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.array.isRequired,\r\n}\r\n","import PropTypes from 'prop-types'\r\n\r\nexport default function TransactionRow({ type, amount, currency }) {\r\n  return (\r\n    <tr>\r\n      <td>{type}</td>\r\n      <td>{amount}</td>\r\n      <td>{currency}</td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nTransactionRow.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  amount: PropTypes.string.isRequired,\r\n  currency: PropTypes.string.isRequired,\r\n}\r\n","import PropTypes from 'prop-types'\r\nimport TransactionRow from './TransactionRow'\r\n\r\nexport default function TransactionHistory({ items }) {\r\n  return (\r\n    <table className=\"transaction-history\">\r\n      <thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {items.map((item) => (\r\n          <TransactionRow\r\n            key={item.id}\r\n            type={item.type}\r\n            amount={item.amount}\r\n            currency={item.currency}\r\n          />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.array.isRequired,\r\n}\r\n","import Profile from './components/Profile/Profile'\nimport user from './db/user.json'\n\nimport Statistics from './components/Statistics/Statistics'\nimport data from './db/data.json'\n\nimport FriendList from './components/FriendList/FriendList'\nimport friendsArr from './db/friends.json'\n\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory'\nimport transactions from './db/transactions.json'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Profile\n        username={user.username}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n\n      <Statistics title=\"qweqwe\" data={data} />\n\n      <FriendList friends={friendsArr} />\n\n      <TransactionHistory items={transactions} />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}